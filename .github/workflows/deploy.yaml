name: deploy
# make it easy to tell which deployment is running
run-name: deploy ${{ github.ref_name }} to ${{ inputs.target_env || 'dev' }}

concurrency:
  # only allow one deployment at a time per environment
  group: deploy-${{ github.event.inputs.target_env || 'dev' }}
  cancel-in-progress: false

on:
  push:
    branches:
      - main

  workflow_dispatch:
    inputs:
      target_env:
        description: "Environment to deploy to"
        type: environment
        required: true
        default: dev

jobs:
  setup:
    # default to dev when triggered by push
    runs-on: ubuntu-latest

    env:
      target_env: ${{ github.event.inputs.target_env || 'dev' }}

    steps:
      - name: Determine Runner Type
        run: echo "UBUNTU_VERSION_VAR_NAME=UBUNTU_VERSION_$(echo $target_env)" >> $GITHUB_ENV

      - run: echo dolla $UBUNTU_VERSION_VAR_NAME
      - run: echo env ${{ env.UBUNTU_VERSION_VAR_NAME }}

      - name: Verify UBUNTU_VERSION_{ENV} is set for ${{ env.target_env }}
        if: ${{ vars[env.UBUNTU_VERSION_VAR_NAME] == '' }}
        run: |
          echo "$UBUNTU_VERSION_VAR_NAME is not configured"
          exit 1

    outputs:
      target_env: ${{ env.target_env }}
      runner: ubuntu-${{ vars[env.UBUNTU_VERSION_VAR_NAME] }}

  deployment:
    needs: setup
    runs-on: ${{ needs.setup.outputs.runner }}
    environment: ${{ needs.setup.outputs.target_env }}
    steps:
      - name: Checkout Repo Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # fetch all history for all branches and tags
          fetch-tags: true

      - run: echo "demo using environment variables to determine the runner type"
      - run: echo "running on ${{ needs.setup.outputs.runner }}"
      - run: cat /etc/lsb-release

      - name: Verify Version
        run: git describe --tags

      - name: Verify Most Recent Commit
        run: git show

      - name: CDK Deploy
        run: echo "pretending to cdk deploy..."

  smoke-test:
    needs: [setup, deployment]
    runs-on: ${{ needs.setup.outputs.runner }}
    steps:
      - name: Checkout Repo Code
        uses: actions/checkout@v4

      - name: Smoke Test
        run: echo "pretending to run smoke tests..."

  # This runs only when deploying a feature branch to dev.
  # It gets assigned to a fake runner that will never run which blocks
  # additional deployments until the workflow is cancelled.
  pause-for-dev-testing:
    needs: [setup, deployment, smoke-test]
    runs-on: fake-runner-that-will-never-run
    if: ${{ github.event.inputs.target_env == 'dev' && github.ref_name != 'main' }}
    steps:
      - run: echo "cancel the workflow when done testing your feature branch"
